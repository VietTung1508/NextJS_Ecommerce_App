// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  phoneNumber    String?
  address        String?
  hashedPassword String?
  createdAt      DateTime? @default(now())
  updatedAt      DateTime?
  role           UserRole  @default(USER)

  accounts Account[]
  orders   Order[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Banner {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  descritions     String
  backgroundImage String
  poster          String

  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  subCategory String[]

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  products Product[]
}

model Product {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price Int
  image String
  quantity    Int
  author      String
  pages       Int
  publisher   String
  isAdult     Boolean
  type        String
  salePrice   Int?
  sellNumber  Int     @default(0)

  categoryIds String   @db.ObjectId
  category    Category @relation(fields: [categoryIds], references: [id])

  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  Banner   Banner[]
}

model Coupon {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  couponName String 
  couponPercent Float
  couponQuantity Int
}

model Order {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  total Int
  phoneNumber String
  approved Boolean @default(false)
  delivery String
  address String
  payment String
  products Json?
  createdAt DateTime? @default(now())
  updatedAt DateTime? 

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

model Admin {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  password String
  image String
}
